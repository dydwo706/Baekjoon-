흔히 알고 있는 github.com 은 도메인 주소.
이 github.com과 같은 도메인 주소는 각각의 IP 주소와 연결되어 있어용.
사이트의 제작자는 원하는 도메인 주소의 이름과 IP주소를 DNS서버에 정보를 넘겨줍니당.
그리고 사용자는 PC에서 해당 도메인 주소를 검색하면 PC가 DNS서버에 그 주소의 IP가 뭔지 물어봐.
그럼 DNS서버가 해당 IP주소를 알려주고 사용자의 PC는 그 정보를 이용해서 제작자의 사이트에 접속 기릿.

    내꺼             ㈜github            DNS server
    ㅁㅁ   ----->      ㅁㅁ      ----->      ㅁㅁ
    ㅁㅁ     들가자     ㅁㅁ    github.com은  ㅁㅁ  ㅇㅋ
   오 개꿀                     1.23.456로~!
     <-----------------------------------------
           깃헙 ip주소 이거래  1.23.456 여기로 가셈.
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
ex ) blog.example.com.
순서대로 blog는 sub도메인, example은 Second-level 도메인, com은 Top-level 도메인, 마지막 . 은 Root도메인이다
Root부터 sub까지 하위 단계의 DNS서버 정보를 알고있어.
Root는 Toplevel DNS서버의 정보를, Toplevel은 secondlevel의 서버정보를 secondlevel은 sub의 서버정보를 알고있단말.
모든 컴퓨터들은 최소한 Root서버의 IP주소가 무엇인지는 알고 있어.
따라서 우리가 해당 사이트로 접속을 하려고 할 때, Root서버로 부터 탑레벨 세컨레벨 섭레벨까지 차례대로 해당 정보들을 겟또.
마지막으로 sub서버에서 최종IP주소를 알 수 있게되는 거시다.
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
 등록자   ------1---- 등록대행자 registar ---2,5--- 등록소 registry  ----0----- ICANN 비영리단체
                             4↑
12.345    ----3--- author itative name server -- Top Level domain  ---------Root name server
                 <서버주소>abc-server.net          def-servers.net            ghi-servers.net
                        exmpl.com.                     .com                           .
                                                                         ↓top lev 서버들의 주소를 기억
             exmpl.com. *A 12.345                exmpl.com. *NS abc~~     com *NS def-server.net
            (등록자의 NS에다가 해당 IP주소 저장)
 
                        ↑11                            ↑9 ↓10                      ↑7  ↓8
 사용자 ---6<인터넷연결>---- DNS server ----------------------------------------------
                          KT같은 회사들
 
 
 
 *A와 NS는 record Type이라고 한다. NS는 name server 즉, exmpl.com의 관리 서버는 ~~이다를 의미.
  A는 Addressd를 뜻하고 ip의 최종주소 뜻함.
 
                         
★순서★
0. Root NS는 Toplev NS의 주소를 기억.
1. 등록자가 exmpl.com.이라는 도메인 주소를 등록대행자에 요청.
2. 등록대행자가 등록소에 요청해서 사용가능하다면 해당 도메인 구매.
3. 등록자가 authoritative 서버에 도메인와 ip주소 저장
4. authoritative서버를 등록대행자에 등록
5. 등록대행자는 4번에서 받은 정보를 등록소에 넘겨줌
6. 사용자가 DNS server를 통해 exmpl.com에 들어가려함ㅈ
7. DNS server는 Root name server한테 정보 물어봄.
8. Root는 해당 IP주소는 모르기에 .com의 NS를 넘겨줌.
9. DNS 가 이번에는 Toplev에대가 물어봄
10. top도 모르기에 그 IP주소를 알고있는 authoritative 주소를 알려줌
11. DNS가  authoritative한테서 최종 IP 얻음
12. 클리어-~!
◈ 위와 같은 과정을 매번 거치면 비효율적이기 때문에 해당 DNS server에서는 한번 찾아봤던 IP주소들을 저장해놓는데
   이를 cache 캐쉬 라고 한다. 이를 통해 다음 번에 요청이 들어오면 바로 ip주소를 제공 ㄱㄴ.
 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
 
 
 
